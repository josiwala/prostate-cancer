summary(mylogit_red5)
pR2(mylogit_red5)
test_2 <- step(mylogit_full, direction="both")
summary(test_2)
step(mylogit_full, direction="forward")
step(mylogit_full, direction="backward")
# reduced first-order logistic model 5
# remove Age
mylogit_red5 <- glm(Y_HighGradeCancer ~ PSALevel + CancerVol, data=mydata, family=binomial(link="logit"))
summary(mylogit_red5)
mylogit_red5 <- glm(Y_HighGradeCancer ~  CancerVol, data=mydata, family=binomial(link="logit"))
summary(mylogit_red5)
# reduced first-order logistic model 5
# remove Age
mylogit_red5 <- glm(Y_HighGradeCancer ~ PSALevel + CancerVol + Age, data=mydata, family=binomial(link="logit"))
summary(mylogit_red5)
# reduced first-order logistic model 5
# remove Age
mylogit_red5 <- glm(Y_HighGradeCancer ~ PSALevel + CancerVol + Age, data=mydata, family=binomial(link="logit"))
summary(mylogit_red5)
APPENC05 <- read.csv("C:/Users/jaosi/Desktop/DS-Projects/graduate-project/prostate-cancer/data/processed/APPENC05.txt")
mydata <- APPENC05
# fit full second-order logistic model
mylogit_full_poly <- glm(Y_HighGradeCancer ~ poly(PSALevel, 2) + poly(CancerVol, 2) + poly(Weight, 2) +
poly(Age, 2) + poly(BenignProstaticHyperplasia, 2) + SeminalVesicleInvasion +
poly(CapsularPenetration, 2), data=mydata, family="binomial")
mylogit_full_poly <- glm(Y_HighGradeCancer ~ poly(PSALevel, 2) + poly(CancerVol, 2) + poly(Weight, 2) +
poly(Age, 2) + poly(BenignProstaticHyperplasia, 2) + SeminalVesicleInvasion +
poly(CapsularPenetration, 2), data=mydata, family="binomial")
poly <- step(mylogit_full_poly)
mydata$SeminalVesicleInvasion <- factor(mydata$SeminalVesicleInvasion)
poly <- step(mylogit_full_poly)
test_poly <- glm(formula = Y_HighGradeCancer ~ poly(PSALevel, 2) + poly(Age, 2) +
poly(CapsularPenetration, 2), family = "binomial", data = mydata)
summary(test_poly)
test_poly <- glm(formula = Y_HighGradeCancer ~ PSALevel^2 +
poly(CapsularPenetration, 2), family = "binomial", data = mydata)
summary(test_poly)
test_poly <- glm(formula = Y_HighGradeCancer ~ PSALevel^2 + Age^2
poly(CapsularPenetration, 2), family = "binomial", data = mydata)
summary(test_poly)
#####
test_poly <- glm(formula = Y_HighGradeCancer ~ PSALevel^2 + Age^2 +
poly(CapsularPenetration, 2), family = "binomial", data = mydata)
summary(test_poly)
test_poly <- glm(formula = Y_HighGradeCancer ~ PSALevel^2 + Age^2 +
CapsularPenetration^2, family = "binomial", data = mydata)
summary(test_poly)
ancer ~ PSALevel^2 + Age^2
, family = "binomial", data = mydata)
test_poly <- glm(formula = Y_HighGradeCancer ~ PSALevel^2 + Age^2
, family = "binomial", data = mydata)
test_poly <- glm(formula = Y_HighGradeCancer ~ PSALevel^2 + Age^2
, family = "binomial", data = mydata)
summary(test_poly)
test_poly <- glm(formula = Y_HighGradeCancer ~ PSALevel^2 + CancerVol,
family = "binomial", data = mydata)
summary(test_poly)
poly1 <- step(mylogit_full_poly)
test_poly <- glm(Y_HighGradeCancer ~ PSALevel^2 + CancerVol,
family = "binomial", data = mydata)
summary(test_poly)
names(mydata)
test_poly2 <- glm(Y_HighGradCancer ~ PSALevel + PSALevel^2 +
CancerVol + CancerVol^2 +
Weight + Weight^2 +
Age + Age^2 +
BenignProstaticHyperplasia + BenignProstaticHyperplasia^2 +
SeminalVesicleInvasion +
CapsularPenetration + CapsularPenetration^2,
family="binomial", data=mydata)
summary(test_poly2)
test_poly2 <- glm(Y_HighGradeCancer ~ PSALevel + PSALevel^2 +
CancerVol + CancerVol^2 +
Weight + Weight^2 +
Age + Age^2 +
BenignProstaticHyperplasia + BenignProstaticHyperplasia^2 +
SeminalVesicleInvasion +
CapsularPenetration + CapsularPenetration^2,
family="binomial", data=mydata)
summary(test_poly2)
t <- step(test_poly2)
test_poly2 <- glm(Y_HighGradeCancer ~ PSALevel^2 +
CancerVol^2 +
Weight^2 +
Age^2 +
BenignProstaticHyperplasia^2 +
SeminalVesicleInvasion +
CapsularPenetration + CapsularPenetration^2,
family="binomial", data=mydata)
summary(test_poly2)
t <- step(mylogit_full_poly)
step(mylogit_red5)
# fit full first-order logistic model
mylogit_full <- glm(Y_HighGradeCancer ~ PSALevel + CancerVol + Weight + Age + BenignProstaticHyperplasia +
SeminalVesicleInvasion + CapsularPenetration, data=mydata, family="binomial")
summary(mylogit_full)
t <- step(mylogit_full)
r <- step(mylogit_full, direction="forward")
summary(r)
r <- step(mylogit_full, direction="backward")
summary(r)
selectedMod <- step(mylogit_full)
all_vifs <- car::vif(selectedMod)
mod1 <- glm(Y_HighGradeCancer ~ PSALevel + CancerVol + Age, data=mydata, family="binomial")
mod2 <- glm(Y_HighGradeCancer ~ PSALevel + CancerVol, data=mydata, family="binomia")
avova(mod1, mod2)
anova(mod1, mod2)
mod2 <- glm(Y_HighGradeCancer ~ PSALevel + CancerVol, data=mydata, family="binomial")
anova(mod1, mod2)
summary(anova(mod1, mod2))
anova(mylogit_full, mod1, mod2)
step(mylogit_full_poly
)
APPENC05 <- read.csv("C:/Users/jaosi/Desktop/DS-Projects/graduate-project/prostate-cancer/data/processed/APPENC05.txt")
mydata <- APPENC05
library(pscl)
# declare SeminalVesicleInvasion a categorical variable (SeminalVesicleInvasion = [0, 1])
mydata$SeminalVesicleInvasion <- as.factor(mydata$SeminalVesicleInvasion)
mydata$SeminalVesicleInvasion
# declare SeminalVesicleInvasion a categorical variable (SeminalVesicleInvasion = [0, 1])
mydata$SeminalVesicleInvasion <- factor(mydata$SeminalVesicleInvasion)
split <- sample.split(mydata, splitratio=0.8)
library(caTools)
caTools?
a
??caTools
??catools
install.packages("caTools")
install.packages("installr")
library(installr)
updateR()
install.packages("caTools")
install.packages('caTools')
library(caTools)
# load dataset
APPENC05 <- read.csv("C:/Users/jaosi/Desktop/DS-Projects/graduate-project/prostate-cancer/data/processed/APPENC05.txt")
mydata <- APPENC05
library(caTools)
# declare SeminalVesicleInvasion a categorical variable (SeminalVesicleInvasion = [0, 1])
mydata$SeminalVesicleInvasion <- factor(mydata$SeminalVesicleInvasion)
split <- sample.split(mydata, splitratio=0.8)
# split data
split <- sample.split(mydata, SplitRatio=0.8)
split
training <- subset(mydata, split="True")
testing <- subset(mydata, split="False")
testing
split <- sample.split(mydata, SplitRatio=0.8)
training <- subset(mydata, split=="True")
testing <- subset(mydata, split=="False")
training
testing
split
mydata$SeminalVesicleInvasion <- factor(mydata$SeminalVesicleInvasion)
split <- sample.split(mydata, SplitRatio=0.8)
training <- subset(mydata, split=="True")
testing <- subset(mydata, split=="False")
split
logit_poly <- glm(Y_HighGradeCancer ~ poly(PSALevel, 2) + poly(CancerVol, 2) + poly(Weight, 2) +
poly(Age, 2) + poly(BenignProstaticHyperplasia, 2) + SeminalVesicleInvasion +
poly(CapsularPenetration, 2), data=mydata, family="binomial")
summary(logi_poly)
summary(logit_poly)
step(logit_poly)
logit_poly <- glm(Y_HighGradeCancer ~ poly(PSALevel, 2) + poly(CancerVol, 2) + poly(Weight, 2) +
poly(Age, 2) + poly(BenignProstaticHyperplasia, 2) + SeminalVesicleInvasion +
poly(CapsularPenetration, 2), data=testing, family="binomial")
logit_poly <- glm(Y_HighGradeCancer ~ poly(PSALevel, 2) + poly(CancerVol, 2) + poly(Weight, 2) +
poly(Age, 2) + poly(BenignProstaticHyperplasia, 2) + SeminalVesicleInvasion +
poly(CapsularPenetration, 2), data=training, family="binomial")
# fit full second-order logistic model
logit_poly <- glm(Y_HighGradeCancer ~ poly(PSALevel, 2) + poly(CancerVol, 2) + poly(Weight, 2) +
poly(Age, 2) + poly(BenignProstaticHyperplasia, 2) + SeminalVesicleInvasion +
poly(CapsularPenetration, 2), data=mydata, family="binomial")
# fit full second-order logistic model
logit_poly <- glm(Y_HighGradeCancer ~ poly(PSALevel, 2) + poly(CancerVol, 2) + poly(Weight, 2) +
poly(Age, 2) + poly(BenignProstaticHyperplasia, 2) + SeminalVesicleInvasion +
poly(CapsularPenetration, 2), data=training, family="binomial")
logit_poly <- glm(Y_HighGradeCancer ~ poly(PSALevel, 1) + poly(CancerVol, 2) + poly(Weight, 2) +
poly(Age, 2) + poly(BenignProstaticHyperplasia, 2) + SeminalVesicleInvasion +
poly(CapsularPenetration, 2), data=training, family="binomial")
logit_poly <- glm(Y_HighGradeCancer ~ PSALevel + poly(CancerVol, 2) + poly(Weight, 2) +
poly(Age, 2) + poly(BenignProstaticHyperplasia, 2) + SeminalVesicleInvasion +
poly(CapsularPenetration, 2), data=training, family="binomial")
# fit full second-order logistic model
logit_poly2 <- glm(Y_HighGradeCancer ~ poly(PSALevel, 2) + poly(CancerVol, 2) + poly(Weight, 2) +
poly(Age, 2) + poly(BenignProstaticHyperplasia, 2) + SeminalVesicleInvasion +
poly(CapsularPenetration, 2), data=training, family="binomial")
view(training)
View(training)
library(caTools)
split <- sample.split(mydata, SplitRatio=0.8)
training <- subset(mydata, split=="True")
View(training)
View(mydata)
# load dataset
APPENC05 <- read.csv("C:/Users/jaosi/Desktop/DS-Projects/graduate-project/prostate-cancer/data/processed/APPENC05.txt")
mydata <- APPENC05
summary(mydata)
View(mydata)
names(mydata)
library(pscl)
??caTools
load.package("caTools")
load.packages("caTools")
install.packages("caTools")
remove.packages("caTools", lib="~/R/win-library/4.0")
install.package("caTools")
install.packages("caTools")
install.packages("caTools")
library("caTools", lib.loc="~/R/win-library/4.0")
??caTools
?caTools
split <- sample.split(mydata, SplitRatio=0.8)
training <- subset(mydata, split=="TRUE")
testing <- subset(mydata, split=="FALSE")
View(testing)
View(training)
mydata$SeminalVesicleInvasion <- factor(mydata$SeminalVesicleInvasion)
# split data
split <- sample.split(mydata, SplitRatio=0.8)
training <- subset(mydata, split=="TRUE")
testing <- subset(mydata, split=="FALSE")
logit_poly <- glm(Y_HighGradeCancer ~ poly(PSALevel, 2) + poly(CancerVol, 2) + poly(Weight, 2) +
poly(Age, 2) + poly(BenignProstaticHyperplasia, 2) + SeminalVesicleInvasion +
poly(CapsularPenetration, 2), data=training, family="binomial")
summary(logit_poly)
step(logit_poly)
test_poly2 <- glm(Y_HighGradeCancer ~
poly(PSALevel, 2) +
poly(CancerVol, 2) +
#  Weight^2 +
poly(Age, 2)
#  BenignProstaticHyperplasia^2 +
#  SeminalVesicleInvasion +
#  CapsularPenetration + CapsularPenetration^2,
family="binomial", data=training)
summary(test_poly2)
test_poly2 <- glm(Y_HighGradeCancer ~
poly(PSALevel, 2) +
poly(CancerVol, 2) +
#  Weight^2 +
poly(Age, 2)
#  BenignProstaticHyperplasia^2 +
#  SeminalVesicleInvasion +
#  CapsularPenetration + CapsularPenetration^2,
family="binomial", data=training)
summary(test_poly2)
test_poly2 <- glm(Y_HighGradeCancer ~
poly(PSALevel, 2) +
poly(CancerVol, 2) +
#  Weight^2 +
poly(Age, 2) ,
#  BenignProstaticHyperplasia^2 +
#  SeminalVesicleInvasion +
#  CapsularPenetration + CapsularPenetration^2,
family="binomial", data=training)
summary(test_poly2)
step(test_poly2)
test_poly2 <- glm(Y_HighGradeCancer ~
#  poly(PSALevel, 2) +
poly(CancerVol, 2),
#  Weight^2 +
#  poly(Age, 2) ,
#  BenignProstaticHyperplasia^2 +
#  SeminalVesicleInvasion +
#  CapsularPenetration + CapsularPenetration^2,
family="binomial", data=training)
summary(test_poly2)
test_poly2 <- glm(Y_HighGradeCancer ~
#  poly(PSALevel, 2) +
poly(CancerVol, 2),
#  Weight^2 +
#  poly(Age, 2) ,
#  BenignProstaticHyperplasia^2 +
#  SeminalVesicleInvasion +
#  CapsularPenetration + CapsularPenetration^2,
family="binomial", data=training)
summary(test_poly2)
# fit full second-order logistic model
logit_poly <- glm(Y_HighGradeCancer ~ poly(PSALevel, 2) + poly(CancerVol, 2) + poly(Weight, 2) +
poly(Age, 2) + poly(BenignProstaticHyperplasia, 2) + SeminalVesicleInvasion +
poly(CapsularPenetration, 2), data=training, family="binomial")
summary(logit_poly)
step(logit_poly)
test_poly2 <- glm(Y_HighGradeCancer ~
#  poly(PSALevel, 2) +
poly(CancerVol, 2),
#  Weight^2 +
#  poly(Age, 2) ,
#  BenignProstaticHyperplasia^2 +
#  SeminalVesicleInvasion +
#  CapsularPenetration + CapsularPenetration^2,
family="binomial", data=training)
summary(test_poly2)
test_poly2 <- glm(Y_HighGradeCancer ~
poly(PSALevel, 2) +
poly(CancerVol, 2),
#  Weight^2 +
#  poly(Age, 2) ,
#  BenignProstaticHyperplasia^2 +
#  SeminalVesicleInvasion +
#  CapsularPenetration + CapsularPenetration^2,
family="binomial", data=training)
summary(test_poly2)
test_poly2 <- glm(Y_HighGradeCancer ~
poly(PSALevel, 2) +
poly(CancerVol, 2) +
#  Weight^2 +
poly(Age, 2) ,
#  BenignProstaticHyperplasia^2 +
#  SeminalVesicleInvasion +
#  CapsularPenetration + CapsularPenetration^2,
family="binomial", data=training)
summary(test_poly2)
logit_full <- glm(Y_HighGradeCancer ~ PSALevel + CancerVol + Weight + Age + BenignProstaticHyperplasia +
SeminalVesicleInvasion + CapsularPenetration, data=training, family="binomial")
summary(logit_full)
step(logit_full)
# fit full first-order logistic model
logit_full <- glm(Y_HighGradeCancer ~ PSALevel + CancerVol + Weight + Age + BenignProstaticHyperplasia +
SeminalVesicleInvasion + CapsularPenetration, data=training, family="binomial")
summary(logit_full)
step(logit_full)
logit2 <- glm(Y_HighGradeCancer ~
PSALevel
+ CancerVol
+ weight
+ Age
+ BenignProstaticHyperplasia
+ SeminalVesicleInvasion
+ CapsularPenetration
, data=training, family="binomial")
summary(logit2)
logit2 <- glm(Y_HighGradeCancer ~
PSALevel
+ CancerVol
+ Weight
+ Age
+ BenignProstaticHyperplasia
+ SeminalVesicleInvasion
+ CapsularPenetration
, data=training, family="binomial")
summary(logit2)
# set seed
seed(21)
# set seed
setseed(21)
# set seed
set.seed(21)
# split data
split <- sample.split(mydata, SplitRatio=0.8)
split
# split data
split <- sample.split(mydata, SplitRatio=0.8)
split
# split data
split <- sample.split(mydata, SplitRatio=0.8, myseed)
# split data
split <- sample.split(mydata, SplitRatio=0.8, seed=myseed)
# set seed
set.seed(123)
split <- sample.split(mydata, SplitRatio=0.8, seed=myseed)
split
split <- sample.split(mydata, SplitRatio=0.8, seed=myseed)
split
split <- sample.split(mydata, SplitRatio=0.8, seed=myseed)
split
split <- sample.split(mydata, SplitRatio=0.8, seed=myseed)
split
training <- subset(mydata, split=="TRUE")
testing <- subset(mydata, split=="FALSE")
logit_poly <- glm(Y_HighGradeCancer ~ poly(PSALevel, 2) + poly(CancerVol, 2) + poly(Weight, 2) +
poly(Age, 2) + poly(BenignProstaticHyperplasia, 2) + SeminalVesicleInvasion +
poly(CapsularPenetration, 2), data=training, family="binomial")
summary(logit_poly)
step(logit_poly)
step(logit_poly)
test_poly2 <- glm(Y_HighGradeCancer ~
poly(PSALevel, 2) +
poly(CancerVol, 2) +
#  Weight^2 +
poly(Age, 2) ,
#  BenignProstaticHyperplasia^2 +
#  SeminalVesicleInvasion +
#  CapsularPenetration + CapsularPenetration^2,
family="binomial", data=training)
summary(test_poly2)
logit_full <- glm(Y_HighGradeCancer ~ PSALevel + CancerVol + Weight + Age + BenignProstaticHyperplasia +
SeminalVesicleInvasion + CapsularPenetration, data=training, family="binomial")
summary(logit_full)
step(logit_full)
logit2 <- glm(Y_HighGradeCancer ~
PSALevel
# + CancerVol
#+ Weight
#+ Age
#+ BenignProstaticHyperplasia
+ SeminalVesicleInvasion
+ CapsularPenetration
, data=training, family="binomial")
summary(logit2)
res <- predict(logit2, training, type="response")
res <- predict(logit2, testing, type="response")
table(ActualValue=testing$type, PredictedValue=res>0.5)
logit2 <- glm(Y_HighGradeCancer ~
PSALevel
# + CancerVol
#+ Weight
#+ Age
#+ BenignProstaticHyperplasia
+ SeminalVesicleInvasion
+ CapsularPenetration
, data=training, family="binomial")
res <- predict(logit2, testing, type="response")
table(ActualValue=testing$type, PredictedValue=res>0.5)
testig
testing
testing$type
res
table(ActualValue=testing, PredictedValue=res>0.5)
(table(ActualValue=testing$type, PredictedValue=res>0.5))
(table(ActualValue=training$type, PredictedValue=res>0.5))
training
testing
table(ActualValue=training$type, Predictedvalue=res>0.5)
table(Actualvalue=training$type, Predictedvalue=res>0.5)
(ActualValue=testing$type, PredictedValue=res>0.5)
table(ActualValue=testing$type, PredictedValue=res>0.5)
length(testing$type)
length(PredictedValue)
length(res>0.5)
table(ActualValue=testing, PredictedValue=res>0.5)
length(testing)
table(ActualValue=testing$Y_HighGradeCancer, PredictedValue=res>0.5)
t <- table(ActualValue=testing$Y_HighGradeCancer, PredictedValue=res>0.5)
t
t[]
t[1]
t[2]
t[3]
t[4]
t[5]
accuracy <- (t[1] + t[4]) / (t[1] + t[2] +t[3] + t[4])
accuracy
logit_poly2 <- glm(Y_HighGradeCancer ~
poly(PSALevel, 2) +
poly(CancerVol, 2) +
#  Weight^2 +
poly(Age, 2) ,
#  BenignProstaticHyperplasia^2 +
#  SeminalVesicleInvasion +
#  CapsularPenetration + CapsularPenetration^2,
family="binomial", data=training)
summary(logit_poly2)
logit_poly2 <- glm(Y_HighGradeCancer ~
poly(PSALevel, 2)
+ poly(CancerVol, 2) +
# + Weight^2 +
+ poly(Age, 2)
#  BenignProstaticHyperplasia^2 +
#  SeminalVesicleInvasion +
#  CapsularPenetration + CapsularPenetration^2,
, family="binomial", data=training)
summary(logit_poly2)
logit_poly2 <- glm(Y_HighGradeCancer ~
poly(PSALevel, 2)
+ poly(CancerVol, 2) +
# + Weight^2 +
+ poly(Age, 2)
# + poly(BenignProstaticHyperplasia, 2)
# + poly(SeminalVesicleInvasion, 2)
# + poly(CapsularPenetration, 2)
, family="binomial", data=training)
summary(logit_poly2)
myseed <- set.seed(123)
myseed
myseed
# set seed for reproducibility
set.seed(123)
split <- sample.split(mydata, SplitRatio=0.8, seed=myseed)
split
split <- sample.split(mydata, SplitRatio=0.8)
split
split <- sample.split(mydata, SplitRatio=0.8)
split
split <- sample.split(mydata, SplitRatio=0.8)
split
set.seed(123)
split <- sample.split(mydata, SplitRatio=0.8)
split
split <- sample.split(mydata, SplitRatio=0.8)
split
plot(logit_full)
plot(logit2)
# create a confusion matrix, and calculate model accuracy
res <- predict(logit2, testing, type="response")
t <- table(ActualValue=testing$Y_HighGradeCancer, PredictedValue=res>0.5)
t
accuracy <- (t[1] + t[4]) / (t[1] + t[2] +t[3] + t[4])
accuracy
testing
length(testing)
length(testing[1])
length(testing[2])
test
testing[Y_HighGradeCancer]
length(training)
lenth(training$Y_HighGradeCancer)
length(training$Y_HighGradeCancer)
sum(training$Y_HighGradeCancer)
